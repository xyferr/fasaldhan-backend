# Generated by Django 5.2.3 on 2025-06-26 10:40

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('model_type', models.CharField(choices=[('price_prediction', 'Price Prediction'), ('quality_assessment', 'Quality Assessment'), ('yield_prediction', 'Yield Prediction'), ('demand_forecasting', 'Demand Forecasting'), ('risk_assessment', 'Risk Assessment')], max_length=20)),
                ('version', models.CharField(max_length=20)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('training_date', models.DateTimeField()),
                ('model_file_path', models.CharField(max_length=500)),
                ('mae', models.FloatField(blank=True, help_text='Mean Absolute Error', null=True)),
                ('rmse', models.FloatField(blank=True, help_text='Root Mean Square Error', null=True)),
                ('r2_score', models.FloatField(blank=True, help_text='R-squared Score', null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProgressImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='progress_images/')),
                ('caption', models.CharField(blank=True, max_length=255, null=True)),
                ('growth_stage', models.CharField(blank=True, max_length=50, null=True)),
                ('health_assessment', models.JSONField(blank=True, null=True)),
                ('estimated_yield', models.FloatField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('variety', models.CharField(blank=True, max_length=100, null=True)),
                ('scientific_name', models.CharField(blank=True, max_length=200, null=True)),
                ('growing_season', models.CharField(blank=True, max_length=100, null=True)),
                ('harvest_time_days', models.PositiveIntegerField(blank=True, help_text='Days to harvest', null=True)),
                ('average_yield_per_acre', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('current_market_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('predicted_price_next_month', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_volatility_score', models.FloatField(blank=True, help_text='0-1 score indicating price volatility', null=True)),
                ('ideal_temperature_min', models.FloatField(blank=True, null=True)),
                ('ideal_temperature_max', models.FloatField(blank=True, null=True)),
                ('ideal_rainfall_mm', models.FloatField(blank=True, null=True)),
                ('soil_ph_min', models.FloatField(blank=True, null=True)),
                ('soil_ph_max', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crops', to='contract.category')),
            ],
            options={
                'unique_together': {('name', 'variety')},
            },
        ),
        migrations.CreateModel(
            name='CropListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listing_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('quantity_available', models.DecimalField(decimal_places=2, help_text='Quantity in quintals', max_digits=10)),
                ('expected_price_per_quintal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quality_grade', models.CharField(blank=True, choices=[('A+', 'Premium Quality'), ('A', 'High Quality'), ('B+', 'Good Quality'), ('B', 'Standard Quality'), ('C', 'Basic Quality')], max_length=2, null=True)),
                ('organic_certified', models.BooleanField(default=False)),
                ('expected_harvest_date', models.DateField()),
                ('is_harvested', models.BooleanField(default=False)),
                ('actual_harvest_date', models.DateField(blank=True, null=True)),
                ('farm_location', models.CharField(max_length=255)),
                ('pincode', models.CharField(max_length=6)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('in_negotiation', 'In Negotiation'), ('contracted', 'Contracted'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('ai_quality_score', models.FloatField(blank=True, help_text='AI-predicted quality score (0-1)', null=True)),
                ('ai_price_recommendation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('market_demand_score', models.FloatField(blank=True, help_text='Market demand prediction (0-1)', null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('terms_and_conditions', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='contract.crop')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crop_listings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CropImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='crop_images/')),
                ('image_type', models.CharField(choices=[('field', 'Field/Farm View'), ('crop_close', 'Crop Close-up'), ('sample', 'Sample'), ('harvest', 'Harvested Crop')], max_length=20)),
                ('ai_quality_assessment', models.JSONField(blank=True, help_text='AI analysis results', null=True)),
                ('predicted_yield', models.FloatField(blank=True, null=True)),
                ('health_score', models.FloatField(blank=True, help_text='Crop health score (0-1)', null=True)),
                ('ripeness_score', models.FloatField(blank=True, help_text='Ripeness score (0-1)', null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='contract.croplisting')),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('agreed_quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('agreed_price_per_quintal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_contract_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('contract_date', models.DateTimeField(auto_now_add=True)),
                ('expected_delivery_date', models.DateField()),
                ('actual_delivery_date', models.DateField(blank=True, null=True)),
                ('payment_terms', models.CharField(choices=[('advance_full', '100% Advance'), ('advance_50', '50% Advance, 50% on Delivery'), ('advance_30', '30% Advance, 70% on Delivery'), ('on_delivery', '100% on Delivery'), ('post_delivery', 'Payment after Delivery')], max_length=20)),
                ('quality_requirements', models.TextField(blank=True, null=True)),
                ('delivery_location', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('disputed', 'Disputed')], default='pending', max_length=15)),
                ('completion_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ai_risk_score', models.FloatField(blank=True, help_text='AI-predicted contract risk (0-1)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_contracts', to=settings.AUTH_USER_MODEL)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_contracts', to=settings.AUTH_USER_MODEL)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='contract.croplisting')),
            ],
        ),
        migrations.CreateModel(
            name='ContractProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('progress_percentage', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('notes', models.TextField(blank=True, null=True)),
                ('predicted_completion_date', models.DateField(blank=True, null=True)),
                ('quality_trend', models.CharField(blank=True, max_length=20, null=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_updates', to='contract.contract')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('progress_images', models.ManyToManyField(blank=True, to='contract.progressimage')),
            ],
            options={
                'ordering': ['-update_date'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('quality_rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('communication_rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('timeliness_rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('review_text', models.TextField(blank=True, null=True)),
                ('would_recommend', models.BooleanField(default=True)),
                ('sentiment_score', models.FloatField(blank=True, help_text='Sentiment analysis score (-1 to 1)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contract', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='contract.contract')),
                ('reviewee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_reviews', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MarketPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=255)),
                ('pincode', models.CharField(max_length=6)),
                ('price_per_quintal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('market_name', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('season', models.CharField(blank=True, max_length=20, null=True)),
                ('weather_condition', models.CharField(blank=True, max_length=100, null=True)),
                ('demand_level', models.CharField(blank=True, max_length=20, null=True)),
                ('festival_season', models.BooleanField(default=False)),
                ('export_demand', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='market_prices', to='contract.crop')),
            ],
            options={
                'unique_together': {('crop', 'location', 'date', 'market_name')},
            },
        ),
    ]
